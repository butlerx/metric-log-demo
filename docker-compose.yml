---
version: '3.7'
volumes:
  prometheus_data: {}
  grafana_data: {}
services:
  server:
    build: .
    image: butlerx/metric-logs-demo
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - server
      - loki
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  grafana:
    image: grafana/grafana
    depends_on:
      - loki
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.env
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail:latest
  #   depends_on:
  #     - loki
  #   volumes:
  #     - /var/log:/var/log
  #   command: -config.file=/etc/promtail/docker-config.yaml
